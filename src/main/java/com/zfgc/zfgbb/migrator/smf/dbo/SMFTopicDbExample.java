package com.zfgc.zfgbb.migrator.smf.dbo;

import java.util.ArrayList;
import java.util.List;

public class SMFTopicDbExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table smf_1topics
     *
     * @mbg.generated Mon Feb 10 22:51:30 EST 2025
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table smf_1topics
     *
     * @mbg.generated Mon Feb 10 22:51:30 EST 2025
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table smf_1topics
     *
     * @mbg.generated Mon Feb 10 22:51:30 EST 2025
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smf_1topics
     *
     * @mbg.generated Mon Feb 10 22:51:30 EST 2025
     */
    public SMFTopicDbExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smf_1topics
     *
     * @mbg.generated Mon Feb 10 22:51:30 EST 2025
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smf_1topics
     *
     * @mbg.generated Mon Feb 10 22:51:30 EST 2025
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smf_1topics
     *
     * @mbg.generated Mon Feb 10 22:51:30 EST 2025
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smf_1topics
     *
     * @mbg.generated Mon Feb 10 22:51:30 EST 2025
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smf_1topics
     *
     * @mbg.generated Mon Feb 10 22:51:30 EST 2025
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smf_1topics
     *
     * @mbg.generated Mon Feb 10 22:51:30 EST 2025
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smf_1topics
     *
     * @mbg.generated Mon Feb 10 22:51:30 EST 2025
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smf_1topics
     *
     * @mbg.generated Mon Feb 10 22:51:30 EST 2025
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smf_1topics
     *
     * @mbg.generated Mon Feb 10 22:51:30 EST 2025
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smf_1topics
     *
     * @mbg.generated Mon Feb 10 22:51:30 EST 2025
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table smf_1topics
     *
     * @mbg.generated Mon Feb 10 22:51:30 EST 2025
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdTopicIsNull() {
            addCriterion("id_topic is null");
            return (Criteria) this;
        }

        public Criteria andIdTopicIsNotNull() {
            addCriterion("id_topic is not null");
            return (Criteria) this;
        }

        public Criteria andIdTopicEqualTo(Integer value) {
            addCriterion("id_topic =", value, "idTopic");
            return (Criteria) this;
        }

        public Criteria andIdTopicNotEqualTo(Integer value) {
            addCriterion("id_topic <>", value, "idTopic");
            return (Criteria) this;
        }

        public Criteria andIdTopicGreaterThan(Integer value) {
            addCriterion("id_topic >", value, "idTopic");
            return (Criteria) this;
        }

        public Criteria andIdTopicGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_topic >=", value, "idTopic");
            return (Criteria) this;
        }

        public Criteria andIdTopicLessThan(Integer value) {
            addCriterion("id_topic <", value, "idTopic");
            return (Criteria) this;
        }

        public Criteria andIdTopicLessThanOrEqualTo(Integer value) {
            addCriterion("id_topic <=", value, "idTopic");
            return (Criteria) this;
        }

        public Criteria andIdTopicIn(List<Integer> values) {
            addCriterion("id_topic in", values, "idTopic");
            return (Criteria) this;
        }

        public Criteria andIdTopicNotIn(List<Integer> values) {
            addCriterion("id_topic not in", values, "idTopic");
            return (Criteria) this;
        }

        public Criteria andIdTopicBetween(Integer value1, Integer value2) {
            addCriterion("id_topic between", value1, value2, "idTopic");
            return (Criteria) this;
        }

        public Criteria andIdTopicNotBetween(Integer value1, Integer value2) {
            addCriterion("id_topic not between", value1, value2, "idTopic");
            return (Criteria) this;
        }

        public Criteria andIsStickyIsNull() {
            addCriterion("is_sticky is null");
            return (Criteria) this;
        }

        public Criteria andIsStickyIsNotNull() {
            addCriterion("is_sticky is not null");
            return (Criteria) this;
        }

        public Criteria andIsStickyEqualTo(Byte value) {
            addCriterion("is_sticky =", value, "isSticky");
            return (Criteria) this;
        }

        public Criteria andIsStickyNotEqualTo(Byte value) {
            addCriterion("is_sticky <>", value, "isSticky");
            return (Criteria) this;
        }

        public Criteria andIsStickyGreaterThan(Byte value) {
            addCriterion("is_sticky >", value, "isSticky");
            return (Criteria) this;
        }

        public Criteria andIsStickyGreaterThanOrEqualTo(Byte value) {
            addCriterion("is_sticky >=", value, "isSticky");
            return (Criteria) this;
        }

        public Criteria andIsStickyLessThan(Byte value) {
            addCriterion("is_sticky <", value, "isSticky");
            return (Criteria) this;
        }

        public Criteria andIsStickyLessThanOrEqualTo(Byte value) {
            addCriterion("is_sticky <=", value, "isSticky");
            return (Criteria) this;
        }

        public Criteria andIsStickyIn(List<Byte> values) {
            addCriterion("is_sticky in", values, "isSticky");
            return (Criteria) this;
        }

        public Criteria andIsStickyNotIn(List<Byte> values) {
            addCriterion("is_sticky not in", values, "isSticky");
            return (Criteria) this;
        }

        public Criteria andIsStickyBetween(Byte value1, Byte value2) {
            addCriterion("is_sticky between", value1, value2, "isSticky");
            return (Criteria) this;
        }

        public Criteria andIsStickyNotBetween(Byte value1, Byte value2) {
            addCriterion("is_sticky not between", value1, value2, "isSticky");
            return (Criteria) this;
        }

        public Criteria andIdBoardIsNull() {
            addCriterion("id_board is null");
            return (Criteria) this;
        }

        public Criteria andIdBoardIsNotNull() {
            addCriterion("id_board is not null");
            return (Criteria) this;
        }

        public Criteria andIdBoardEqualTo(Short value) {
            addCriterion("id_board =", value, "idBoard");
            return (Criteria) this;
        }

        public Criteria andIdBoardNotEqualTo(Short value) {
            addCriterion("id_board <>", value, "idBoard");
            return (Criteria) this;
        }

        public Criteria andIdBoardGreaterThan(Short value) {
            addCriterion("id_board >", value, "idBoard");
            return (Criteria) this;
        }

        public Criteria andIdBoardGreaterThanOrEqualTo(Short value) {
            addCriterion("id_board >=", value, "idBoard");
            return (Criteria) this;
        }

        public Criteria andIdBoardLessThan(Short value) {
            addCriterion("id_board <", value, "idBoard");
            return (Criteria) this;
        }

        public Criteria andIdBoardLessThanOrEqualTo(Short value) {
            addCriterion("id_board <=", value, "idBoard");
            return (Criteria) this;
        }

        public Criteria andIdBoardIn(List<Short> values) {
            addCriterion("id_board in", values, "idBoard");
            return (Criteria) this;
        }

        public Criteria andIdBoardNotIn(List<Short> values) {
            addCriterion("id_board not in", values, "idBoard");
            return (Criteria) this;
        }

        public Criteria andIdBoardBetween(Short value1, Short value2) {
            addCriterion("id_board between", value1, value2, "idBoard");
            return (Criteria) this;
        }

        public Criteria andIdBoardNotBetween(Short value1, Short value2) {
            addCriterion("id_board not between", value1, value2, "idBoard");
            return (Criteria) this;
        }

        public Criteria andIdFirstMsgIsNull() {
            addCriterion("id_first_msg is null");
            return (Criteria) this;
        }

        public Criteria andIdFirstMsgIsNotNull() {
            addCriterion("id_first_msg is not null");
            return (Criteria) this;
        }

        public Criteria andIdFirstMsgEqualTo(Integer value) {
            addCriterion("id_first_msg =", value, "idFirstMsg");
            return (Criteria) this;
        }

        public Criteria andIdFirstMsgNotEqualTo(Integer value) {
            addCriterion("id_first_msg <>", value, "idFirstMsg");
            return (Criteria) this;
        }

        public Criteria andIdFirstMsgGreaterThan(Integer value) {
            addCriterion("id_first_msg >", value, "idFirstMsg");
            return (Criteria) this;
        }

        public Criteria andIdFirstMsgGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_first_msg >=", value, "idFirstMsg");
            return (Criteria) this;
        }

        public Criteria andIdFirstMsgLessThan(Integer value) {
            addCriterion("id_first_msg <", value, "idFirstMsg");
            return (Criteria) this;
        }

        public Criteria andIdFirstMsgLessThanOrEqualTo(Integer value) {
            addCriterion("id_first_msg <=", value, "idFirstMsg");
            return (Criteria) this;
        }

        public Criteria andIdFirstMsgIn(List<Integer> values) {
            addCriterion("id_first_msg in", values, "idFirstMsg");
            return (Criteria) this;
        }

        public Criteria andIdFirstMsgNotIn(List<Integer> values) {
            addCriterion("id_first_msg not in", values, "idFirstMsg");
            return (Criteria) this;
        }

        public Criteria andIdFirstMsgBetween(Integer value1, Integer value2) {
            addCriterion("id_first_msg between", value1, value2, "idFirstMsg");
            return (Criteria) this;
        }

        public Criteria andIdFirstMsgNotBetween(Integer value1, Integer value2) {
            addCriterion("id_first_msg not between", value1, value2, "idFirstMsg");
            return (Criteria) this;
        }

        public Criteria andIdLastMsgIsNull() {
            addCriterion("id_last_msg is null");
            return (Criteria) this;
        }

        public Criteria andIdLastMsgIsNotNull() {
            addCriterion("id_last_msg is not null");
            return (Criteria) this;
        }

        public Criteria andIdLastMsgEqualTo(Integer value) {
            addCriterion("id_last_msg =", value, "idLastMsg");
            return (Criteria) this;
        }

        public Criteria andIdLastMsgNotEqualTo(Integer value) {
            addCriterion("id_last_msg <>", value, "idLastMsg");
            return (Criteria) this;
        }

        public Criteria andIdLastMsgGreaterThan(Integer value) {
            addCriterion("id_last_msg >", value, "idLastMsg");
            return (Criteria) this;
        }

        public Criteria andIdLastMsgGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_last_msg >=", value, "idLastMsg");
            return (Criteria) this;
        }

        public Criteria andIdLastMsgLessThan(Integer value) {
            addCriterion("id_last_msg <", value, "idLastMsg");
            return (Criteria) this;
        }

        public Criteria andIdLastMsgLessThanOrEqualTo(Integer value) {
            addCriterion("id_last_msg <=", value, "idLastMsg");
            return (Criteria) this;
        }

        public Criteria andIdLastMsgIn(List<Integer> values) {
            addCriterion("id_last_msg in", values, "idLastMsg");
            return (Criteria) this;
        }

        public Criteria andIdLastMsgNotIn(List<Integer> values) {
            addCriterion("id_last_msg not in", values, "idLastMsg");
            return (Criteria) this;
        }

        public Criteria andIdLastMsgBetween(Integer value1, Integer value2) {
            addCriterion("id_last_msg between", value1, value2, "idLastMsg");
            return (Criteria) this;
        }

        public Criteria andIdLastMsgNotBetween(Integer value1, Integer value2) {
            addCriterion("id_last_msg not between", value1, value2, "idLastMsg");
            return (Criteria) this;
        }

        public Criteria andIdMemberStartedIsNull() {
            addCriterion("id_member_started is null");
            return (Criteria) this;
        }

        public Criteria andIdMemberStartedIsNotNull() {
            addCriterion("id_member_started is not null");
            return (Criteria) this;
        }

        public Criteria andIdMemberStartedEqualTo(Integer value) {
            addCriterion("id_member_started =", value, "idMemberStarted");
            return (Criteria) this;
        }

        public Criteria andIdMemberStartedNotEqualTo(Integer value) {
            addCriterion("id_member_started <>", value, "idMemberStarted");
            return (Criteria) this;
        }

        public Criteria andIdMemberStartedGreaterThan(Integer value) {
            addCriterion("id_member_started >", value, "idMemberStarted");
            return (Criteria) this;
        }

        public Criteria andIdMemberStartedGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_member_started >=", value, "idMemberStarted");
            return (Criteria) this;
        }

        public Criteria andIdMemberStartedLessThan(Integer value) {
            addCriterion("id_member_started <", value, "idMemberStarted");
            return (Criteria) this;
        }

        public Criteria andIdMemberStartedLessThanOrEqualTo(Integer value) {
            addCriterion("id_member_started <=", value, "idMemberStarted");
            return (Criteria) this;
        }

        public Criteria andIdMemberStartedIn(List<Integer> values) {
            addCriterion("id_member_started in", values, "idMemberStarted");
            return (Criteria) this;
        }

        public Criteria andIdMemberStartedNotIn(List<Integer> values) {
            addCriterion("id_member_started not in", values, "idMemberStarted");
            return (Criteria) this;
        }

        public Criteria andIdMemberStartedBetween(Integer value1, Integer value2) {
            addCriterion("id_member_started between", value1, value2, "idMemberStarted");
            return (Criteria) this;
        }

        public Criteria andIdMemberStartedNotBetween(Integer value1, Integer value2) {
            addCriterion("id_member_started not between", value1, value2, "idMemberStarted");
            return (Criteria) this;
        }

        public Criteria andIdMemberUpdatedIsNull() {
            addCriterion("id_member_updated is null");
            return (Criteria) this;
        }

        public Criteria andIdMemberUpdatedIsNotNull() {
            addCriterion("id_member_updated is not null");
            return (Criteria) this;
        }

        public Criteria andIdMemberUpdatedEqualTo(Integer value) {
            addCriterion("id_member_updated =", value, "idMemberUpdated");
            return (Criteria) this;
        }

        public Criteria andIdMemberUpdatedNotEqualTo(Integer value) {
            addCriterion("id_member_updated <>", value, "idMemberUpdated");
            return (Criteria) this;
        }

        public Criteria andIdMemberUpdatedGreaterThan(Integer value) {
            addCriterion("id_member_updated >", value, "idMemberUpdated");
            return (Criteria) this;
        }

        public Criteria andIdMemberUpdatedGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_member_updated >=", value, "idMemberUpdated");
            return (Criteria) this;
        }

        public Criteria andIdMemberUpdatedLessThan(Integer value) {
            addCriterion("id_member_updated <", value, "idMemberUpdated");
            return (Criteria) this;
        }

        public Criteria andIdMemberUpdatedLessThanOrEqualTo(Integer value) {
            addCriterion("id_member_updated <=", value, "idMemberUpdated");
            return (Criteria) this;
        }

        public Criteria andIdMemberUpdatedIn(List<Integer> values) {
            addCriterion("id_member_updated in", values, "idMemberUpdated");
            return (Criteria) this;
        }

        public Criteria andIdMemberUpdatedNotIn(List<Integer> values) {
            addCriterion("id_member_updated not in", values, "idMemberUpdated");
            return (Criteria) this;
        }

        public Criteria andIdMemberUpdatedBetween(Integer value1, Integer value2) {
            addCriterion("id_member_updated between", value1, value2, "idMemberUpdated");
            return (Criteria) this;
        }

        public Criteria andIdMemberUpdatedNotBetween(Integer value1, Integer value2) {
            addCriterion("id_member_updated not between", value1, value2, "idMemberUpdated");
            return (Criteria) this;
        }

        public Criteria andIdPollIsNull() {
            addCriterion("id_poll is null");
            return (Criteria) this;
        }

        public Criteria andIdPollIsNotNull() {
            addCriterion("id_poll is not null");
            return (Criteria) this;
        }

        public Criteria andIdPollEqualTo(Integer value) {
            addCriterion("id_poll =", value, "idPoll");
            return (Criteria) this;
        }

        public Criteria andIdPollNotEqualTo(Integer value) {
            addCriterion("id_poll <>", value, "idPoll");
            return (Criteria) this;
        }

        public Criteria andIdPollGreaterThan(Integer value) {
            addCriterion("id_poll >", value, "idPoll");
            return (Criteria) this;
        }

        public Criteria andIdPollGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_poll >=", value, "idPoll");
            return (Criteria) this;
        }

        public Criteria andIdPollLessThan(Integer value) {
            addCriterion("id_poll <", value, "idPoll");
            return (Criteria) this;
        }

        public Criteria andIdPollLessThanOrEqualTo(Integer value) {
            addCriterion("id_poll <=", value, "idPoll");
            return (Criteria) this;
        }

        public Criteria andIdPollIn(List<Integer> values) {
            addCriterion("id_poll in", values, "idPoll");
            return (Criteria) this;
        }

        public Criteria andIdPollNotIn(List<Integer> values) {
            addCriterion("id_poll not in", values, "idPoll");
            return (Criteria) this;
        }

        public Criteria andIdPollBetween(Integer value1, Integer value2) {
            addCriterion("id_poll between", value1, value2, "idPoll");
            return (Criteria) this;
        }

        public Criteria andIdPollNotBetween(Integer value1, Integer value2) {
            addCriterion("id_poll not between", value1, value2, "idPoll");
            return (Criteria) this;
        }

        public Criteria andNumRepliesIsNull() {
            addCriterion("num_replies is null");
            return (Criteria) this;
        }

        public Criteria andNumRepliesIsNotNull() {
            addCriterion("num_replies is not null");
            return (Criteria) this;
        }

        public Criteria andNumRepliesEqualTo(Integer value) {
            addCriterion("num_replies =", value, "numReplies");
            return (Criteria) this;
        }

        public Criteria andNumRepliesNotEqualTo(Integer value) {
            addCriterion("num_replies <>", value, "numReplies");
            return (Criteria) this;
        }

        public Criteria andNumRepliesGreaterThan(Integer value) {
            addCriterion("num_replies >", value, "numReplies");
            return (Criteria) this;
        }

        public Criteria andNumRepliesGreaterThanOrEqualTo(Integer value) {
            addCriterion("num_replies >=", value, "numReplies");
            return (Criteria) this;
        }

        public Criteria andNumRepliesLessThan(Integer value) {
            addCriterion("num_replies <", value, "numReplies");
            return (Criteria) this;
        }

        public Criteria andNumRepliesLessThanOrEqualTo(Integer value) {
            addCriterion("num_replies <=", value, "numReplies");
            return (Criteria) this;
        }

        public Criteria andNumRepliesIn(List<Integer> values) {
            addCriterion("num_replies in", values, "numReplies");
            return (Criteria) this;
        }

        public Criteria andNumRepliesNotIn(List<Integer> values) {
            addCriterion("num_replies not in", values, "numReplies");
            return (Criteria) this;
        }

        public Criteria andNumRepliesBetween(Integer value1, Integer value2) {
            addCriterion("num_replies between", value1, value2, "numReplies");
            return (Criteria) this;
        }

        public Criteria andNumRepliesNotBetween(Integer value1, Integer value2) {
            addCriterion("num_replies not between", value1, value2, "numReplies");
            return (Criteria) this;
        }

        public Criteria andNumViewsIsNull() {
            addCriterion("num_views is null");
            return (Criteria) this;
        }

        public Criteria andNumViewsIsNotNull() {
            addCriterion("num_views is not null");
            return (Criteria) this;
        }

        public Criteria andNumViewsEqualTo(Integer value) {
            addCriterion("num_views =", value, "numViews");
            return (Criteria) this;
        }

        public Criteria andNumViewsNotEqualTo(Integer value) {
            addCriterion("num_views <>", value, "numViews");
            return (Criteria) this;
        }

        public Criteria andNumViewsGreaterThan(Integer value) {
            addCriterion("num_views >", value, "numViews");
            return (Criteria) this;
        }

        public Criteria andNumViewsGreaterThanOrEqualTo(Integer value) {
            addCriterion("num_views >=", value, "numViews");
            return (Criteria) this;
        }

        public Criteria andNumViewsLessThan(Integer value) {
            addCriterion("num_views <", value, "numViews");
            return (Criteria) this;
        }

        public Criteria andNumViewsLessThanOrEqualTo(Integer value) {
            addCriterion("num_views <=", value, "numViews");
            return (Criteria) this;
        }

        public Criteria andNumViewsIn(List<Integer> values) {
            addCriterion("num_views in", values, "numViews");
            return (Criteria) this;
        }

        public Criteria andNumViewsNotIn(List<Integer> values) {
            addCriterion("num_views not in", values, "numViews");
            return (Criteria) this;
        }

        public Criteria andNumViewsBetween(Integer value1, Integer value2) {
            addCriterion("num_views between", value1, value2, "numViews");
            return (Criteria) this;
        }

        public Criteria andNumViewsNotBetween(Integer value1, Integer value2) {
            addCriterion("num_views not between", value1, value2, "numViews");
            return (Criteria) this;
        }

        public Criteria andLockedIsNull() {
            addCriterion("locked is null");
            return (Criteria) this;
        }

        public Criteria andLockedIsNotNull() {
            addCriterion("locked is not null");
            return (Criteria) this;
        }

        public Criteria andLockedEqualTo(Byte value) {
            addCriterion("locked =", value, "locked");
            return (Criteria) this;
        }

        public Criteria andLockedNotEqualTo(Byte value) {
            addCriterion("locked <>", value, "locked");
            return (Criteria) this;
        }

        public Criteria andLockedGreaterThan(Byte value) {
            addCriterion("locked >", value, "locked");
            return (Criteria) this;
        }

        public Criteria andLockedGreaterThanOrEqualTo(Byte value) {
            addCriterion("locked >=", value, "locked");
            return (Criteria) this;
        }

        public Criteria andLockedLessThan(Byte value) {
            addCriterion("locked <", value, "locked");
            return (Criteria) this;
        }

        public Criteria andLockedLessThanOrEqualTo(Byte value) {
            addCriterion("locked <=", value, "locked");
            return (Criteria) this;
        }

        public Criteria andLockedIn(List<Byte> values) {
            addCriterion("locked in", values, "locked");
            return (Criteria) this;
        }

        public Criteria andLockedNotIn(List<Byte> values) {
            addCriterion("locked not in", values, "locked");
            return (Criteria) this;
        }

        public Criteria andLockedBetween(Byte value1, Byte value2) {
            addCriterion("locked between", value1, value2, "locked");
            return (Criteria) this;
        }

        public Criteria andLockedNotBetween(Byte value1, Byte value2) {
            addCriterion("locked not between", value1, value2, "locked");
            return (Criteria) this;
        }

        public Criteria andUnapprovedPostsIsNull() {
            addCriterion("unapproved_posts is null");
            return (Criteria) this;
        }

        public Criteria andUnapprovedPostsIsNotNull() {
            addCriterion("unapproved_posts is not null");
            return (Criteria) this;
        }

        public Criteria andUnapprovedPostsEqualTo(Short value) {
            addCriterion("unapproved_posts =", value, "unapprovedPosts");
            return (Criteria) this;
        }

        public Criteria andUnapprovedPostsNotEqualTo(Short value) {
            addCriterion("unapproved_posts <>", value, "unapprovedPosts");
            return (Criteria) this;
        }

        public Criteria andUnapprovedPostsGreaterThan(Short value) {
            addCriterion("unapproved_posts >", value, "unapprovedPosts");
            return (Criteria) this;
        }

        public Criteria andUnapprovedPostsGreaterThanOrEqualTo(Short value) {
            addCriterion("unapproved_posts >=", value, "unapprovedPosts");
            return (Criteria) this;
        }

        public Criteria andUnapprovedPostsLessThan(Short value) {
            addCriterion("unapproved_posts <", value, "unapprovedPosts");
            return (Criteria) this;
        }

        public Criteria andUnapprovedPostsLessThanOrEqualTo(Short value) {
            addCriterion("unapproved_posts <=", value, "unapprovedPosts");
            return (Criteria) this;
        }

        public Criteria andUnapprovedPostsIn(List<Short> values) {
            addCriterion("unapproved_posts in", values, "unapprovedPosts");
            return (Criteria) this;
        }

        public Criteria andUnapprovedPostsNotIn(List<Short> values) {
            addCriterion("unapproved_posts not in", values, "unapprovedPosts");
            return (Criteria) this;
        }

        public Criteria andUnapprovedPostsBetween(Short value1, Short value2) {
            addCriterion("unapproved_posts between", value1, value2, "unapprovedPosts");
            return (Criteria) this;
        }

        public Criteria andUnapprovedPostsNotBetween(Short value1, Short value2) {
            addCriterion("unapproved_posts not between", value1, value2, "unapprovedPosts");
            return (Criteria) this;
        }

        public Criteria andApprovedIsNull() {
            addCriterion("approved is null");
            return (Criteria) this;
        }

        public Criteria andApprovedIsNotNull() {
            addCriterion("approved is not null");
            return (Criteria) this;
        }

        public Criteria andApprovedEqualTo(Byte value) {
            addCriterion("approved =", value, "approved");
            return (Criteria) this;
        }

        public Criteria andApprovedNotEqualTo(Byte value) {
            addCriterion("approved <>", value, "approved");
            return (Criteria) this;
        }

        public Criteria andApprovedGreaterThan(Byte value) {
            addCriterion("approved >", value, "approved");
            return (Criteria) this;
        }

        public Criteria andApprovedGreaterThanOrEqualTo(Byte value) {
            addCriterion("approved >=", value, "approved");
            return (Criteria) this;
        }

        public Criteria andApprovedLessThan(Byte value) {
            addCriterion("approved <", value, "approved");
            return (Criteria) this;
        }

        public Criteria andApprovedLessThanOrEqualTo(Byte value) {
            addCriterion("approved <=", value, "approved");
            return (Criteria) this;
        }

        public Criteria andApprovedIn(List<Byte> values) {
            addCriterion("approved in", values, "approved");
            return (Criteria) this;
        }

        public Criteria andApprovedNotIn(List<Byte> values) {
            addCriterion("approved not in", values, "approved");
            return (Criteria) this;
        }

        public Criteria andApprovedBetween(Byte value1, Byte value2) {
            addCriterion("approved between", value1, value2, "approved");
            return (Criteria) this;
        }

        public Criteria andApprovedNotBetween(Byte value1, Byte value2) {
            addCriterion("approved not between", value1, value2, "approved");
            return (Criteria) this;
        }

        public Criteria andIdPreviousBoardIsNull() {
            addCriterion("id_previous_board is null");
            return (Criteria) this;
        }

        public Criteria andIdPreviousBoardIsNotNull() {
            addCriterion("id_previous_board is not null");
            return (Criteria) this;
        }

        public Criteria andIdPreviousBoardEqualTo(Short value) {
            addCriterion("id_previous_board =", value, "idPreviousBoard");
            return (Criteria) this;
        }

        public Criteria andIdPreviousBoardNotEqualTo(Short value) {
            addCriterion("id_previous_board <>", value, "idPreviousBoard");
            return (Criteria) this;
        }

        public Criteria andIdPreviousBoardGreaterThan(Short value) {
            addCriterion("id_previous_board >", value, "idPreviousBoard");
            return (Criteria) this;
        }

        public Criteria andIdPreviousBoardGreaterThanOrEqualTo(Short value) {
            addCriterion("id_previous_board >=", value, "idPreviousBoard");
            return (Criteria) this;
        }

        public Criteria andIdPreviousBoardLessThan(Short value) {
            addCriterion("id_previous_board <", value, "idPreviousBoard");
            return (Criteria) this;
        }

        public Criteria andIdPreviousBoardLessThanOrEqualTo(Short value) {
            addCriterion("id_previous_board <=", value, "idPreviousBoard");
            return (Criteria) this;
        }

        public Criteria andIdPreviousBoardIn(List<Short> values) {
            addCriterion("id_previous_board in", values, "idPreviousBoard");
            return (Criteria) this;
        }

        public Criteria andIdPreviousBoardNotIn(List<Short> values) {
            addCriterion("id_previous_board not in", values, "idPreviousBoard");
            return (Criteria) this;
        }

        public Criteria andIdPreviousBoardBetween(Short value1, Short value2) {
            addCriterion("id_previous_board between", value1, value2, "idPreviousBoard");
            return (Criteria) this;
        }

        public Criteria andIdPreviousBoardNotBetween(Short value1, Short value2) {
            addCriterion("id_previous_board not between", value1, value2, "idPreviousBoard");
            return (Criteria) this;
        }

        public Criteria andIdPreviousTopicIsNull() {
            addCriterion("id_previous_topic is null");
            return (Criteria) this;
        }

        public Criteria andIdPreviousTopicIsNotNull() {
            addCriterion("id_previous_topic is not null");
            return (Criteria) this;
        }

        public Criteria andIdPreviousTopicEqualTo(Integer value) {
            addCriterion("id_previous_topic =", value, "idPreviousTopic");
            return (Criteria) this;
        }

        public Criteria andIdPreviousTopicNotEqualTo(Integer value) {
            addCriterion("id_previous_topic <>", value, "idPreviousTopic");
            return (Criteria) this;
        }

        public Criteria andIdPreviousTopicGreaterThan(Integer value) {
            addCriterion("id_previous_topic >", value, "idPreviousTopic");
            return (Criteria) this;
        }

        public Criteria andIdPreviousTopicGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_previous_topic >=", value, "idPreviousTopic");
            return (Criteria) this;
        }

        public Criteria andIdPreviousTopicLessThan(Integer value) {
            addCriterion("id_previous_topic <", value, "idPreviousTopic");
            return (Criteria) this;
        }

        public Criteria andIdPreviousTopicLessThanOrEqualTo(Integer value) {
            addCriterion("id_previous_topic <=", value, "idPreviousTopic");
            return (Criteria) this;
        }

        public Criteria andIdPreviousTopicIn(List<Integer> values) {
            addCriterion("id_previous_topic in", values, "idPreviousTopic");
            return (Criteria) this;
        }

        public Criteria andIdPreviousTopicNotIn(List<Integer> values) {
            addCriterion("id_previous_topic not in", values, "idPreviousTopic");
            return (Criteria) this;
        }

        public Criteria andIdPreviousTopicBetween(Integer value1, Integer value2) {
            addCriterion("id_previous_topic between", value1, value2, "idPreviousTopic");
            return (Criteria) this;
        }

        public Criteria andIdPreviousTopicNotBetween(Integer value1, Integer value2) {
            addCriterion("id_previous_topic not between", value1, value2, "idPreviousTopic");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table smf_1topics
     *
     * @mbg.generated do_not_delete_during_merge Mon Feb 10 22:51:30 EST 2025
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table smf_1topics
     *
     * @mbg.generated Mon Feb 10 22:51:30 EST 2025
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}